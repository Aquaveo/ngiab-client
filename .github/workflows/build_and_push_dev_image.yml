name: build_push_dev_image

on:
  push:
    branches:
      - '*'

env:
  DOCKER_HUB_ORG: gioelkin
  DOCKER_REPO: tethys-ngiab

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Set Tag
        run: |
          echo "TAG=dev_${GITHUB_SHA}" >> $GITHUB_ENV
          echo "TAG_LATEST=dev_latest" >> $GITHUB_ENV
      - name: Set matrix for build
        id: set-matrix
        run: echo "::set-output name=matrix::{\"include\":[{\"platform\":\"linux/amd64\",\"tag\":\"${{ env.DOCKER_HUB_ORG }}/${{ env.DOCKER_REPO }}:dev_latest-amd64\"},{\"platform\":\"linux/arm64\",\"tag\":\"${{ env.DOCKER_HUB_ORG }}/${{ env.DOCKER_REPO }}:dev_latest-arm64\"}]}"
  # build image
  build:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.setup.outputs.matrix)}}
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set Tag
        run: |
          echo "TAG=dev_${GITHUB_SHA}" >> $GITHUB_ENV
          echo "TAG_LATEST=dev_latest" >> $GITHUB_ENV

      - name: Test Tag
        run: |
          echo $TAG

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_BUILDER_USERNAME }}
          password: ${{ secrets.DOCKER_BUILDER_TOKEN }}

      - name: Build and push specific architecture
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ matrix.tag }}
          platforms: ${{ matrix.platform }}
          cache-from: type=registry,ref=${{ matrix.tag }}-cache:latest
          cache-to: type=registry,ref=${{ matrix.tag }}-cache:latest,mode=max

  cleanup:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: only keeps the first 5 image
        run: |
          echo "TAG=dev_${GITHUB_SHA}" >> $GITHUB_ENV
          echo $TAG
          echo "MAX_NUMBER_IMAGE=10" >> $GITHUB_ENV
          echo $MAX_NUMBER_IMAGE
          . .github/scripts/clean_up_docker_hub.sh '${{ secrets.DOCKER_BUILDER_USERNAME }}' '${{ secrets.DOCKER_BUILDER_TOKEN }}' '${{ env.DOCKER_HUB_ORG }}' '${{ env.DOCKER_REPO }}' '${{ env.MAX_NUMBER_IMAGE }}'
